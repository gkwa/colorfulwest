- name: Elasticsearch certificate management and configuration
  hosts: elasticsearch
  become: yes

  handlers:
    - name: Restart Elasticsearch
      ansible.builtin.service:
        name: elasticsearch
        state: restarted

  vars:
    master_nodes: []
    elasticsearch_config_path: /etc/elasticsearch/elasticsearch.yml
    elasticsearch_config_backup_path: /etc/elasticsearch/elasticsearch.yml.bak
    cluster_name: my_cluster

  tasks:
    - name: Wait for SSH connection
      ansible.builtin.wait_for_connection:
        delay: 10
        sleep: 5
        timeout: 300
      register: wait_result
      until: wait_result is success
      retries: 10

    - name: 'touch /{{ ansible_user }}/.bash_history file'
      ansible.builtin.file:
        path: '/{{ ansible_user }}/.bash_history'
        state: touch
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: '0600'

    - name: Append commands to '/{{ ansible_user }}/.bash_history'
      ansible.builtin.blockinfile:
        path: '/{{ ansible_user }}/.bash_history'
        block: |
          /usr/share/elasticsearch/bin/elasticsearch-certutil ca --out /etc/elasticsearch/elastic-stack-ca.p12 --pass MyPa55word
          /usr/share/elasticsearch/bin/elasticsearch-reset-password --username elastic --auto --batch
          /usr/share/elasticsearch/bin/elasticsearch-users useradd my_admin -p my_password -r superuser
          cat /etc/elasticsearch/elasticsearch.yml
          cat /opt/colorfulwest/elasticsearch_certutil.sh
          cat /opt/colorfulwest/secrets.txt
          nvim /opt/colorfulwest/curl_test.sh
          cat /var/log/elasticsearch/elasticsearch.log
          cat /var/log/elasticsearch/my_cluster.log
          cue export --out=yaml /etc/elasticsearch/elasticsearch.yml
          curl --insecure --cacert /etc/elasticsearch/certs/http_ca.crt -u elastic:$ELASTIC_PASSWORD https://localhost:9200
          curl --cacert /etc/elasticsearch/certs/http_ca.crt -u my_admin:my_password https://localhost:9200
          /opt/colorfulwest/curl_test.sh
          curl --insecure --cacert /etc/elasticsearch/certs/http_ca.crt -u my_admin:my_password https://localhost:9200
          find /etc/elasticsearch -type f
          find /opt/colorfulwest -type f
          grep cluster.name /etc/elasticsearch/elasticsearch.yml
          history | perl -p -e 's#^ *\d+\s+##'
          journalctl -xe
          journalctl -xeu elasticsearch.service
          less -RSi /var/log/elasticsearch/elasticsearch.log
          less -RSi /var/log/elasticsearch/my_cluster.log
          PAGER=cat systemctl status elasticsearch.service
          systemctl daemon-reload
          systemctl enable elasticsearch.service
          tail --retry --follow /var/log/elasticsearch/elasticsearch.log
          tail --retry --follow /var/log/elasticsearch/my_cluster.log
          time systemctl restart elasticsearch.service
          time systemctl start elasticsearch.service
          time systemctl stop elasticsearch.service
          vim /etc/elasticsearch/elasticsearch.yml
          yq -i 'del(."cluster.initial_master_nodes")' /etc/elasticsearch/elasticsearch.yml && yq -i '.cluster.initial_master_nodes = ["'`hostname`'"]' /etc/elasticsearch/elasticsearch.yml && cue export --out=yaml /etc/elasticsearch/elasticsearch.yml
          export ELASTIC_PASSWORD=$(perl -ne 'print "$1\n" if m{New value: (.+)}' /opt/colorfulwest/secrets.txt); echo ELASTIC_PASSWORD:$ELASTIC_PASSWORD
          cat /opt/colorfulwest/secret.txt
          cat /opt/colorfulwest/install_nearwash.sh
          cat /opt/colorfulwest/elasticsearch_certutil.sh
          cat /opt/colorfulwest/cert_subject_check.sh
          nvim /opt/colorfulwest/cert_subject_check.sh
          cat /opt/colorfulwest/keystore_set.sh
          cat /opt/colorfulwest/secrets.txt
          cat /opt/colorfulwest/keystore_clean.sh
          cat /opt/colorfulwest/curl_test.sh
          nvim /opt/colorfulwest/secret.txt
          nvim /opt/colorfulwest/install_nearwash.sh
          nvim /opt/colorfulwest/elasticsearch_certutil.sh
          nvim /opt/colorfulwest/keystore_set.sh
          nvim /opt/colorfulwest/secrets.txt
          nvim /opt/colorfulwest/keystore_clean.sh
          nvim /opt/colorfulwest/curl_test.sh

    - name: Create directory /opt/colorfulwest/
      ansible.builtin.file:
        path: /opt/colorfulwest/
        state: directory
        mode: '0700'

    - name: Install net-tools
      ansible.builtin.package:
        name: net-tools
        state: present
      register: result
      until: result is succeeded
      retries: 10
      delay: 20

    - name: Set log_path variable
      ansible.builtin.set_fact:
        log_path: '/var/log/elasticsearch/{{ cluster_name }}.log'

    - name: Display the log_path
      ansible.builtin.debug:
        msg: 'Log path is {{ log_path }}'

    - name: Add hostname to master_nodes
      ansible.builtin.set_fact:
        master_nodes: '{{ master_nodes + [ ansible_hostname ] }}'

    - name: Check if Elasticsearch configuration backup exists
      ansible.builtin.stat:
        path: '{{ elasticsearch_config_backup_path }}'
      register: backup_file_stat

    - name: Create backup of Elasticsearch configuration
      ansible.builtin.copy:
        src: '{{ elasticsearch_config_path }}'
        dest: '{{ elasticsearch_config_backup_path }}'
        remote_src: yes
      when: not backup_file_stat.stat.exists

    - name: Remove existing /etc/elasticsearch/elastic-stack-ca.p12 file
      ansible.builtin.file:
        path: /etc/elasticsearch/elastic-stack-ca.p12
        state: absent

    - name: Remove existing /etc/elasticsearch/elastic-certificates.p12 file
      ansible.builtin.file:
        path: /etc/elasticsearch/elastic-certificates.p12
        state: absent

    - name: Generate new /etc/elasticsearch/elastic-stack-ca.p12 file
      ansible.builtin.command: >
        /usr/share/elasticsearch/bin/elasticsearch-certutil ca
        --out /etc/elasticsearch/elastic-stack-ca.p12
        --pass MyPa55word
      args:
        creates: /etc/elasticsearch/elastic-stack-ca.p12

    - name: Set permissions on /etc/elasticsearch/elastic-stack-ca.p12 file
      ansible.builtin.file:
        path: /etc/elasticsearch/elastic-stack-ca.p12
        mode: '0400'
        owner: elasticsearch
        group: elasticsearch

    - name: Assert the existence of /etc/elasticsearch/elastic-stack-ca.p12 file
      ansible.builtin.stat:
        path: /etc/elasticsearch/elastic-stack-ca.p12
      register: ca_file_stat

    - name: Create /opt/colorfulwest/install_nearwash.sh
      ansible.builtin.copy:
        dest: /opt/colorfulwest/install_nearwash.sh
        mode: '0755'
        content: |
          #!/bin/bash

          set -x
          set -u
          set -e

          if ! command -v nearwash >/dev/null; then
            pip install git+https://github.com/gkwa/nearwash.git
          fi

    - name: Run script /opt/colorfulwest/install_nearwash.sh
      ansible.builtin.command: /opt/colorfulwest/install_nearwash.sh
      register: script_result

    - name: Report exit code
      ansible.builtin.debug:
        msg: 'Script exited with code: {{ script_result.rc }}'

    - name: Get IP using nearwash search
      ansible.builtin.command: nearwash search
      register: nearwash_output

    - name: Set fact for IP
      ansible.builtin.set_fact:
        ip: '{{ nearwash_output.stdout }}'

    - name: Get IPs into comma seperated list
      ansible.builtin.shell: >
        ifconfig | grep -v inet6 | grep inet | awk '{print $2}' | sort -V | tr '\n' ',' | sed 's/,$//'
      register: ips_output

    - name: Create /opt/colorfulwest/curl_test.sh
      ansible.builtin.copy:
        dest: /opt/colorfulwest/curl_test.sh
        mode: '0755'
        content: |
          #!/bin/bash

          export ELASTIC_PASSWORD=$(grep 'New value: ' /opt/colorfulwest/secrets.txt | cut -d: -f2 | tr -d ' ' | head -1)
          echo ELASTIC_PASSWORD:$ELASTIC_PASSWORD

          openssl pkcs12 -in /etc/elasticsearch/elastic-stack-ca.p12 -out /etc/elasticsearch/cert.crt -clcerts -nokeys -passin pass:MyPa55word

          if [[ ! -f /tmp/nearwash.txt ]]; then
              nearwash report >/tmp/nearwash.txt
          fi

          grep -i ipv4 /tmp/nearwash.txt | grep -oE 'IPAddress: [^ ]*' | cut -d: -f2 | tr -d ' ' | sort -u |
              while read ip; do
                  curl --connect-timeout 1 --cacert /etc/elasticsearch/cert.crt -u elastic:$ELASTIC_PASSWORD https://$ip:9200
              done

    - name: Create script /opt/colorfulwest/elasticsearch_certutil.sh
      ansible.builtin.copy:
        dest: /opt/colorfulwest/elasticsearch_certutil.sh
        mode: '0755'
        content: |
          #!/bin/bash

          set -x
          set -u
          set -e

          if ! command -v eachdodge &>/dev/null; then
            curl -sSL https://github.com/gkwa/eachdodge/releases/latest/download/eachdodge_Linux_x86_64.tar.gz | tar -C /usr/local/bin --no-same-owner -xz eachdodge
            eachdodge version
          fi

          jsfile=$(mktemp /tmp/eachdodge-XXXX.json)
          eachdodge ips2 --outfile=$jsfile
          ips=$(
            jq --raw-output '.[] | select(.ipVersion == "IPv4") | .ip' $jsfile |
            jq --raw-input . | jq --raw-output --slurp 'join(",")'
          )
          echo $ips # 172.17.0.1,15.156.100.61
          dns="{{ ansible_hostname }},$ips"

          /usr/share/elasticsearch/bin/elasticsearch-certutil cert \
          --ca-pass MyPa55word \
          --pass MyPa55word \
          --out /etc/elasticsearch/elastic-certificates.p12 \
          --ca /etc/elasticsearch/elastic-stack-ca.p12 \
          --dns "$dns" \
          --ip "$ips"

    - name: Run /opt/colorfulwest/elasticsearch_certutil.sh script
      ansible.builtin.command: /opt/colorfulwest/elasticsearch_certutil.sh
      args:
        creates: /etc/elasticsearch/elastic-certificates.p12
      register: certutil_result

    - name: Report exit code
      ansible.builtin.debug:
        msg: 'elasticsearch-certutil exited with code: {{ certutil_result.rc }}'

    - name: Set permissions on /etc/elasticsearch/elastic-certificates.p12 file
      ansible.builtin.file:
        path: /etc/elasticsearch/elastic-certificates.p12
        mode: '0400'
        owner: elasticsearch
        group: elasticsearch

    - name: Fail if /etc/elasticsearch/elastic-stack-ca.p12 file does not exist
      ansible.builtin.fail:
        msg: 'The elastic-stack-ca.p12 file does not exist.'
      when: not ca_file_stat.stat.exists

    - name: Assert the existence of /etc/elasticsearch/elastic-stack-ca.p12 file
      ansible.builtin.stat:
        path: /etc/elasticsearch/elastic-certificates.p12
      register: cert_file_stat

    - name: Fail if /etc/elasticsearch/elastic-certificates.p12 file does not exist
      ansible.builtin.fail:
        msg: 'The /etc/elasticsearch/elastic-certificates.p12 file does not exist.'
      when: not cert_file_stat.stat.exists

    - name: Create script /opt/colorfulwest/cert_subject_check.sh
      ansible.builtin.copy:
        dest: /opt/colorfulwest/cert_subject_check.sh
        mode: '0755'
        content: |
          #!/usr/bin/env bash

          # Check subjectAltName

          # Convert PKCS12 to PEM format
          openssl pkcs12 -in /etc/elasticsearch/elastic-certificates.p12 -out /tmp/elastic-certificates.pem -nokeys -nodes -passin pass:MyPa55word

          if openssl x509 -noout -ext subjectAltName -in /tmp/elastic-certificates.pem; then
              rm -f /tmp/elastic-certificates.pem  # Clean up the temporary PEM file
          fi

    - name: Run /opt/colorfulwest/cert_subject_check.sh script
      ansible.builtin.shell: /opt/colorfulwest/cert_subject_check.sh
      register: cert_subject_check

    - name: Report exit code
      ansible.builtin.debug:
        msg: 'Script exited with code: {{ cert_subject_check.rc }}'

    - name: Report subjectAltName
      ansible.builtin.debug:
        msg: '{{ cert_subject_check }}'

    - name: Enable Elasticsearch service
      ansible.builtin.service:
        name: elasticsearch
        enabled: yes

    - name: Create /opt/colorfulwest/keystore_clean.sh script
      ansible.builtin.copy:
        dest: /opt/colorfulwest/keystore_clean.sh
        content: |
          #!/bin/bash

          set -x
          set -u
          set -e

          # Get the list of keystore entries
          keystore_entries=$(/usr/share/elasticsearch/bin/elasticsearch-keystore list)

          # Loop over each entry
          for entry in $keystore_entries; do
            # Skip keystore.seed
            if [ "$entry" != "keystore.seed" ]; then
              # Remove the keystore entry
              /usr/share/elasticsearch/bin/elasticsearch-keystore remove "$entry"
              echo "Removed $entry from elasticsearch-keystore"
            else
              echo "Skipped $entry"
            fi
          done

          echo remaining variables:
          /usr/share/elasticsearch/bin/elasticsearch-keystore list
        mode: '0755'
        owner: root
        group: root

    - name: Create /opt/colorfulwest/secret.txt with password
      ansible.builtin.copy:
        content: MyPa55word
        dest: /opt/colorfulwest/secret.txt
        mode: '0777'

    - name: Create /opt/colorfulwest/keystore_set.sh script
      ansible.builtin.copy:
        dest: /opt/colorfulwest/keystore_set.sh
        content: |
          #!/bin/bash

          set -x
          set -u
          set -e

          variables=(
            xpack.security.http.ssl.truststore.secure_password
            xpack.security.http.ssl.keystore.secure_password
            xpack.security.transport.ssl.keystore.secure_password
            xpack.security.transport.ssl.truststore.secure_password
          )

          for variable in "${variables[@]}"; do
            /usr/share/elasticsearch/bin/elasticsearch-keystore remove "$variable" 2>/dev/null || {
              exit_code=$?
              if [ $exit_code -ne 78 ]; then
                exit $exit_code
              fi
            }

            /usr/share/elasticsearch/bin/elasticsearch-keystore add --stdin "$variable" </opt/colorfulwest/secret.txt
            echo "Added $variable to elasticsearch-keystore"
          done

          echo current set of variables:
          /usr/share/elasticsearch/bin/elasticsearch-keystore list
        mode: '0755'
        owner: root
        group: root

    - name: Run /opt/colorfulwest/keystore_clean.sh
      become: yes
      ansible.builtin.command: /opt/colorfulwest/keystore_clean.sh

    - name: Run /opt/colorfulwest/keystore_set.sh
      become: yes
      ansible.builtin.command: /opt/colorfulwest/keystore_set.sh

    - name: Update Elasticsearch configuration
      ansible.builtin.copy:
        dest: '{{ elasticsearch_config_path }}'
        content: |
          cluster.name: {{ cluster_name }}
          node.name: {{ ansible_hostname }}
          path.data: /var/lib/elasticsearch
          path.logs: /var/log/elasticsearch
          xpack.security.enabled: true
          xpack.security.enrollment.enabled: true
          xpack.security.http.ssl.enabled: true
          xpack.security.http.ssl.keystore.path: /etc/elasticsearch/elastic-certificates.p12
          xpack.security.transport.ssl.enabled: true
          xpack.security.transport.ssl.verification_mode: certificate
          xpack.security.transport.ssl.client_authentication: required
          xpack.security.transport.ssl.keystore.path: /etc/elasticsearch/elastic-certificates.p12
          xpack.security.transport.ssl.truststore.path: /etc/elasticsearch/elastic-certificates.p12
          cluster.initial_master_nodes: ["{{ master_nodes[0] }}"]
          http.host: 0.0.0.0

    - name: Restart Elasticsearch service
      ansible.builtin.service:
        name: elasticsearch
        state: restarted

    - name: Run elasticsearch-setup-passwords command
      ansible.builtin.command: /usr/share/elasticsearch/bin/elasticsearch-reset-password --username elastic --auto --batch
      register: setup_passwords_output

    - name: Store elasticsearch-setup-passwords output in /opt/colorfulwest/secrets.txt
      ansible.builtin.copy:
        content: '{{ setup_passwords_output.stdout }}'
        dest: /opt/colorfulwest/secrets.txt

    - name: Display the content of /opt/colorfulwest/secrets.txt on the target node
      ansible.builtin.command: cat /opt/colorfulwest/secrets.txt
      register: secrets_output

    - name: Display the content of secrets.txt
      ansible.builtin.debug:
        var: secrets_output.stdout_lines
